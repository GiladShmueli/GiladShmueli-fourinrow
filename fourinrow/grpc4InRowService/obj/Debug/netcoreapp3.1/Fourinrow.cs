// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/fourinrow.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace grpc4InRowService {

  /// <summary>Holder for reflection information generated from Protos/fourinrow.proto</summary>
  public static partial class FourinrowReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/fourinrow.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FourinrowReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZQcm90b3MvZm91cmlucm93LnByb3RvEglmb3VyaW5yb3ciBwoFRW1wdHki",
            "LgoIVXNlckluZm8SEAoIdXNlck5hbWUYASABKAkSEAoIcGFzc3dvcmQYAiAB",
            "KAkibwoLR2FtZVBsYXllcnMSDAoEYmx1ZRgBIAEoCRILCgNyZWQYAiABKAkS",
            "EQoJc3RhcnRUaW1lGAMgASgJEhEKCWJsdWVTY29yZRgEIAEoBRIQCghyZWRT",
            "Y29yZRgFIAEoBRINCgV0dXJucxgGIAEoBSJ1CgtHYW1lTWVzc2FnZRIkCgR0",
            "eXBlGAEgASgOMhYuZm91cmlucm93Lk1lc3NhZ2VUeXBlEhAKCGZyb21Vc2Vy",
            "GAIgASgJEg4KBnRvVXNlchgDIAEoCRIPCgdtZXNzYWdlGAQgASgJEg0KBXNj",
            "b3JlGAUgASgFIhoKBVVzZXJzEhEKCXVzZXJOYW1lcxgBIAMoCSIyCgVHYW1l",
            "cxIpCglnYW1lc0RhdGEYASADKAsyFi5mb3VyaW5yb3cuR2FtZVBsYXllcnMi",
            "eAoLUGxheWVyTW9kZWwSEAoIcGxheWVySWQYASABKAUSDAoEbmFtZRgCIAEo",
            "CRIQCghwYXNzd29yZBgDIAEoCRINCgV0b3RhbBgEIAEoBRILCgN3b24YBSAB",
            "KAUSDAoEbG9zdBgGIAEoBRINCgVzY29yZRgHIAEoBSIyCgdQbGF5ZXJzEicK",
            "B3BsYXllcnMYASADKAsyFi5mb3VyaW5yb3cuUGxheWVyTW9kZWwiMgoLU29y",
            "dE1lc3NhZ2USIwoGbWV0aG9kGAEgASgOMhMuZm91cmlucm93LlNvcnRUeXBl",
            "KkgKC01lc3NhZ2VUeXBlEgoKBklOVklURRAAEgoKBlVQREFURRABEgoKBkFO",
            "U1dFUhACEggKBFBMQVkQAxILCgdFTkRHQU1FEAQqRQoIU29ydFR5cGUSCAoE",
            "TkFNRRAAEgkKBVRPVEFMEAESDQoJVklDVE9SSUVTEAISCgoGTE9TU0VTEAMS",
            "CQoFU0NPUkUQBDLLBgoER2FtZRI4CgdDb25uZWN0EhMuZm91cmlucm93LlVz",
            "ZXJJbmZvGhYuZm91cmlucm93LkdhbWVNZXNzYWdlMAESMwoKRGlzY29ubmVj",
            "dBITLmZvdXJpbnJvdy5Vc2VySW5mbxoQLmZvdXJpbnJvdy5FbXB0eRI3CgtT",
            "ZW5kTWVzc2FnZRIWLmZvdXJpbnJvdy5HYW1lTWVzc2FnZRoQLmZvdXJpbnJv",
            "dy5FbXB0eRI2Cg1Vc2VyQ29ubmVjdGVkEhMuZm91cmlucm93LlVzZXJJbmZv",
            "GhAuZm91cmlucm93LkVtcHR5EjEKC1VwZGF0ZVVzZXJzEhAuZm91cmlucm93",
            "LkVtcHR5GhAuZm91cmlucm93LlVzZXJzEjQKDkN1cnJlbnRQbGF5ZXJzEhAu",
            "Zm91cmlucm93LkVtcHR5GhAuZm91cmlucm93LlVzZXJzEjIKBkluc2VydBIW",
            "LmZvdXJpbnJvdy5QbGF5ZXJNb2RlbBoQLmZvdXJpbnJvdy5FbXB0eRIxCghV",
            "c2VySW5EQhITLmZvdXJpbnJvdy5Vc2VySW5mbxoQLmZvdXJpbnJvdy5FbXB0",
            "eRI3CgtHYW1lU3RhcnRlZBIWLmZvdXJpbnJvdy5HYW1lUGxheWVycxoQLmZv",
            "dXJpbnJvdy5FbXB0eRI1CglHYW1lRW5kZWQSFi5mb3VyaW5yb3cuR2FtZVBs",
            "YXllcnMaEC5mb3VyaW5yb3cuRW1wdHkSPwoTUmV0dXJuUGxheWVyczJMb2Ji",
            "eRIWLmZvdXJpbnJvdy5HYW1lUGxheWVycxoQLmZvdXJpbnJvdy5FbXB0eRIy",
            "CgxDdXJyZW50R2FtZXMSEC5mb3VyaW5yb3cuRW1wdHkaEC5mb3VyaW5yb3cu",
            "R2FtZXMSPgoQR2V0UGxheWVyc1NvcnRlZBIWLmZvdXJpbnJvdy5Tb3J0TWVz",
            "c2FnZRoSLmZvdXJpbnJvdy5QbGF5ZXJzEjMKDVByZXZpb3VzR2FtZXMSEC5m",
            "b3VyaW5yb3cuRW1wdHkaEC5mb3VyaW5yb3cuR2FtZXMSOQoRR2V0MlBsYXll",
            "ckhpc3RvcnkSEi5mb3VyaW5yb3cuUGxheWVycxoQLmZvdXJpbnJvdy5HYW1l",
            "c0IUqgIRZ3JwYzRJblJvd1NlcnZpY2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::grpc4InRowService.MessageType), typeof(global::grpc4InRowService.SortType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Empty), global::grpc4InRowService.Empty.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.UserInfo), global::grpc4InRowService.UserInfo.Parser, new[]{ "UserName", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.GamePlayers), global::grpc4InRowService.GamePlayers.Parser, new[]{ "Blue", "Red", "StartTime", "BlueScore", "RedScore", "Turns" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.GameMessage), global::grpc4InRowService.GameMessage.Parser, new[]{ "Type", "FromUser", "ToUser", "Message", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Users), global::grpc4InRowService.Users.Parser, new[]{ "UserNames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Games), global::grpc4InRowService.Games.Parser, new[]{ "GamesData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.PlayerModel), global::grpc4InRowService.PlayerModel.Parser, new[]{ "PlayerId", "Name", "Password", "Total", "Won", "Lost", "Score" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.Players), global::grpc4InRowService.Players.Parser, new[]{ "Players_" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::grpc4InRowService.SortMessage), global::grpc4InRowService.SortMessage.Parser, new[]{ "Method" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MessageType {
    [pbr::OriginalName("INVITE")] Invite = 0,
    [pbr::OriginalName("UPDATE")] Update = 1,
    [pbr::OriginalName("ANSWER")] Answer = 2,
    [pbr::OriginalName("PLAY")] Play = 3,
    [pbr::OriginalName("ENDGAME")] Endgame = 4,
  }

  public enum SortType {
    [pbr::OriginalName("NAME")] Name = 0,
    [pbr::OriginalName("TOTAL")] Total = 1,
    [pbr::OriginalName("VICTORIES")] Victories = 2,
    [pbr::OriginalName("LOSSES")] Losses = 3,
    [pbr::OriginalName("SCORE")] Score = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Empty type
  /// </summary>
  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// The request message containing the user's name.
  /// </summary>
  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      userName_ = other.userName_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "userName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GamePlayers : pb::IMessage<GamePlayers> {
    private static readonly pb::MessageParser<GamePlayers> _parser = new pb::MessageParser<GamePlayers>(() => new GamePlayers());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GamePlayers> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayers() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayers(GamePlayers other) : this() {
      blue_ = other.blue_;
      red_ = other.red_;
      startTime_ = other.startTime_;
      blueScore_ = other.blueScore_;
      redScore_ = other.redScore_;
      turns_ = other.turns_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GamePlayers Clone() {
      return new GamePlayers(this);
    }

    /// <summary>Field number for the "blue" field.</summary>
    public const int BlueFieldNumber = 1;
    private string blue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Blue {
      get { return blue_; }
      set {
        blue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "red" field.</summary>
    public const int RedFieldNumber = 2;
    private string red_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Red {
      get { return red_; }
      set {
        red_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startTime" field.</summary>
    public const int StartTimeFieldNumber = 3;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blueScore" field.</summary>
    public const int BlueScoreFieldNumber = 4;
    private int blueScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BlueScore {
      get { return blueScore_; }
      set {
        blueScore_ = value;
      }
    }

    /// <summary>Field number for the "redScore" field.</summary>
    public const int RedScoreFieldNumber = 5;
    private int redScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RedScore {
      get { return redScore_; }
      set {
        redScore_ = value;
      }
    }

    /// <summary>Field number for the "turns" field.</summary>
    public const int TurnsFieldNumber = 6;
    private int turns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Turns {
      get { return turns_; }
      set {
        turns_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GamePlayers);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GamePlayers other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Blue != other.Blue) return false;
      if (Red != other.Red) return false;
      if (StartTime != other.StartTime) return false;
      if (BlueScore != other.BlueScore) return false;
      if (RedScore != other.RedScore) return false;
      if (Turns != other.Turns) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Blue.Length != 0) hash ^= Blue.GetHashCode();
      if (Red.Length != 0) hash ^= Red.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (BlueScore != 0) hash ^= BlueScore.GetHashCode();
      if (RedScore != 0) hash ^= RedScore.GetHashCode();
      if (Turns != 0) hash ^= Turns.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Blue.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Blue);
      }
      if (Red.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Red);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StartTime);
      }
      if (BlueScore != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(BlueScore);
      }
      if (RedScore != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(RedScore);
      }
      if (Turns != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Turns);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Blue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Blue);
      }
      if (Red.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Red);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (BlueScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BlueScore);
      }
      if (RedScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RedScore);
      }
      if (Turns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Turns);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GamePlayers other) {
      if (other == null) {
        return;
      }
      if (other.Blue.Length != 0) {
        Blue = other.Blue;
      }
      if (other.Red.Length != 0) {
        Red = other.Red;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.BlueScore != 0) {
        BlueScore = other.BlueScore;
      }
      if (other.RedScore != 0) {
        RedScore = other.RedScore;
      }
      if (other.Turns != 0) {
        Turns = other.Turns;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Blue = input.ReadString();
            break;
          }
          case 18: {
            Red = input.ReadString();
            break;
          }
          case 26: {
            StartTime = input.ReadString();
            break;
          }
          case 32: {
            BlueScore = input.ReadInt32();
            break;
          }
          case 40: {
            RedScore = input.ReadInt32();
            break;
          }
          case 48: {
            Turns = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The game message containing all data needed
  /// </summary>
  public sealed partial class GameMessage : pb::IMessage<GameMessage> {
    private static readonly pb::MessageParser<GameMessage> _parser = new pb::MessageParser<GameMessage>(() => new GameMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage(GameMessage other) : this() {
      type_ = other.type_;
      fromUser_ = other.fromUser_;
      toUser_ = other.toUser_;
      message_ = other.message_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameMessage Clone() {
      return new GameMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::grpc4InRowService.MessageType type_ = global::grpc4InRowService.MessageType.Invite;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc4InRowService.MessageType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "fromUser" field.</summary>
    public const int FromUserFieldNumber = 2;
    private string fromUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUser {
      get { return fromUser_; }
      set {
        fromUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "toUser" field.</summary>
    public const int ToUserFieldNumber = 3;
    private string toUser_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToUser {
      get { return toUser_; }
      set {
        toUser_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (FromUser != other.FromUser) return false;
      if (ToUser != other.ToUser) return false;
      if (Message != other.Message) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::grpc4InRowService.MessageType.Invite) hash ^= Type.GetHashCode();
      if (FromUser.Length != 0) hash ^= FromUser.GetHashCode();
      if (ToUser.Length != 0) hash ^= ToUser.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::grpc4InRowService.MessageType.Invite) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (FromUser.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromUser);
      }
      if (ToUser.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ToUser);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (Score != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::grpc4InRowService.MessageType.Invite) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (FromUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUser);
      }
      if (ToUser.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUser);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameMessage other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::grpc4InRowService.MessageType.Invite) {
        Type = other.Type;
      }
      if (other.FromUser.Length != 0) {
        FromUser = other.FromUser;
      }
      if (other.ToUser.Length != 0) {
        ToUser = other.ToUser;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::grpc4InRowService.MessageType) input.ReadEnum();
            break;
          }
          case 18: {
            FromUser = input.ReadString();
            break;
          }
          case 26: {
            ToUser = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 40: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Users : pb::IMessage<Users> {
    private static readonly pb::MessageParser<Users> _parser = new pb::MessageParser<Users>(() => new Users());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Users> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users(Users other) : this() {
      userNames_ = other.userNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Users Clone() {
      return new Users(this);
    }

    /// <summary>Field number for the "userNames" field.</summary>
    public const int UserNamesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_userNames_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> userNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserNames {
      get { return userNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Users);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Users other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!userNames_.Equals(other.userNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= userNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      userNames_.WriteTo(output, _repeated_userNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += userNames_.CalculateSize(_repeated_userNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Users other) {
      if (other == null) {
        return;
      }
      userNames_.Add(other.userNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            userNames_.AddEntriesFrom(input, _repeated_userNames_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Games : pb::IMessage<Games> {
    private static readonly pb::MessageParser<Games> _parser = new pb::MessageParser<Games>(() => new Games());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Games> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Games() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Games(Games other) : this() {
      gamesData_ = other.gamesData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Games Clone() {
      return new Games(this);
    }

    /// <summary>Field number for the "gamesData" field.</summary>
    public const int GamesDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::grpc4InRowService.GamePlayers> _repeated_gamesData_codec
        = pb::FieldCodec.ForMessage(10, global::grpc4InRowService.GamePlayers.Parser);
    private readonly pbc::RepeatedField<global::grpc4InRowService.GamePlayers> gamesData_ = new pbc::RepeatedField<global::grpc4InRowService.GamePlayers>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpc4InRowService.GamePlayers> GamesData {
      get { return gamesData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Games);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Games other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gamesData_.Equals(other.gamesData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gamesData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      gamesData_.WriteTo(output, _repeated_gamesData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += gamesData_.CalculateSize(_repeated_gamesData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Games other) {
      if (other == null) {
        return;
      }
      gamesData_.Add(other.gamesData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gamesData_.AddEntriesFrom(input, _repeated_gamesData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlayerModel : pb::IMessage<PlayerModel> {
    private static readonly pb::MessageParser<PlayerModel> _parser = new pb::MessageParser<PlayerModel>(() => new PlayerModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlayerModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerModel(PlayerModel other) : this() {
      playerId_ = other.playerId_;
      name_ = other.name_;
      password_ = other.password_;
      total_ = other.total_;
      won_ = other.won_;
      lost_ = other.lost_;
      score_ = other.score_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlayerModel Clone() {
      return new PlayerModel(this);
    }

    /// <summary>Field number for the "playerId" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private int playerId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerId {
      get { return playerId_; }
      set {
        playerId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 3;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 4;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "won" field.</summary>
    public const int WonFieldNumber = 5;
    private int won_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Won {
      get { return won_; }
      set {
        won_ = value;
      }
    }

    /// <summary>Field number for the "lost" field.</summary>
    public const int LostFieldNumber = 6;
    private int lost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Lost {
      get { return lost_; }
      set {
        lost_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 7;
    private int score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlayerModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlayerModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      if (Total != other.Total) return false;
      if (Won != other.Won) return false;
      if (Lost != other.Lost) return false;
      if (Score != other.Score) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId != 0) hash ^= PlayerId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      if (Won != 0) hash ^= Won.GetHashCode();
      if (Lost != 0) hash ^= Lost.GetHashCode();
      if (Score != 0) hash ^= Score.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Password);
      }
      if (Total != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Total);
      }
      if (Won != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Won);
      }
      if (Lost != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Lost);
      }
      if (Score != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Score);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      if (Won != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Won);
      }
      if (Lost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Lost);
      }
      if (Score != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Score);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlayerModel other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      if (other.Won != 0) {
        Won = other.Won;
      }
      if (other.Lost != 0) {
        Lost = other.Lost;
      }
      if (other.Score != 0) {
        Score = other.Score;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerId = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Password = input.ReadString();
            break;
          }
          case 32: {
            Total = input.ReadInt32();
            break;
          }
          case 40: {
            Won = input.ReadInt32();
            break;
          }
          case 48: {
            Lost = input.ReadInt32();
            break;
          }
          case 56: {
            Score = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Players : pb::IMessage<Players> {
    private static readonly pb::MessageParser<Players> _parser = new pb::MessageParser<Players>(() => new Players());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Players> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Players() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Players(Players other) : this() {
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Players Clone() {
      return new Players(this);
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int Players_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::grpc4InRowService.PlayerModel> _repeated_players_codec
        = pb::FieldCodec.ForMessage(10, global::grpc4InRowService.PlayerModel.Parser);
    private readonly pbc::RepeatedField<global::grpc4InRowService.PlayerModel> players_ = new pbc::RepeatedField<global::grpc4InRowService.PlayerModel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::grpc4InRowService.PlayerModel> Players_ {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Players);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Players other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Players other) {
      if (other == null) {
        return;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SortMessage : pb::IMessage<SortMessage> {
    private static readonly pb::MessageParser<SortMessage> _parser = new pb::MessageParser<SortMessage>(() => new SortMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SortMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::grpc4InRowService.FourinrowReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortMessage(SortMessage other) : this() {
      method_ = other.method_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortMessage Clone() {
      return new SortMessage(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private global::grpc4InRowService.SortType method_ = global::grpc4InRowService.SortType.Name;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::grpc4InRowService.SortType Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SortMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SortMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method != global::grpc4InRowService.SortType.Name) hash ^= Method.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Method != global::grpc4InRowService.SortType.Name) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Method);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method != global::grpc4InRowService.SortType.Name) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Method);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SortMessage other) {
      if (other == null) {
        return;
      }
      if (other.Method != global::grpc4InRowService.SortType.Name) {
        Method = other.Method;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Method = (global::grpc4InRowService.SortType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
